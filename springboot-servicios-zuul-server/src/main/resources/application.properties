spring.application.name=servicio-zuul-server
server.port=8090

eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka

#productos puede ser cualquier nombre
zuul.routes.productos.service-id=servicio-productos
zuul.routes.productos.path=/api/productos/**

zuul.routes.items.service-id=servicio-items
zuul.routes.items.path=/api/items/**

zuul.routes.usuarios.service-id=servicio-usuarios
zuul.routes.usuarios.path=/api/usuarios/**

zuul.routes.security.service-id=servicio-oauth
zuul.routes.security.path=/api/security/**
zuul.routes.security.sensitive-headers=Cookie,Set-Cookie


#hystrux con timeout eenvuelve a ribbon y siempre hystrix tendra un tiempo mayor a ribbon
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds: 50000
ribbon.ConnectTimeout: 10000
ribbon.ReadTimeout: 30000

spring.sleuth.sampler.probability=1.0
#spring.zipkin.base-url=http://localhost:9411/
spring.zipkin.sender.type=rabbit

#en zuul existe el enrutado Pre,Post,Route
#Pre= se ejecuta antes de que el request sea enrutado-se usa para pasar datos al request
#Post= se ejecuta despues dee que el request haya sido enrutado-Se usa para modificar respuesta
#Route=se ejecuta durante el enrutado del request, aqui se resulve la ruta- se usa para la comunicacion con el microservicio
